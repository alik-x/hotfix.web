{"version":3,"sources":["panels/Home.js","utils.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","sw.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","isEmptyPrice","price","Place","onIncrementPosition","onDecrementPosition","useMemo","foodIds","Set","foods","result","values","filter","value","has","reduce","count","parseInt","accounting","formatNumber","isEmptyP","food","composition","onClick","itemId","areaId","classNames","e","preventDefault","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","useState","details","faster","setFaster","time","setTime","selfService","setSelfService","products","onFocus","event","target","onBlur","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","JSON","parse","localStorage","getItem","setOrderStatuses","setOrder","basename","process","path","exact","nextStatuses","setItem","stringify","render","routeProps","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","isLocalhost","Boolean","window","hostname","connect","send","URL","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fb26b0d0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","export function isEmptyPrice(price) {\n  // eslint-disable-next-line\n  return price == '0' || !price\n}\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport accounting from 'accounting';\nimport classNames from 'classnames';\n// import PropTypes from 'prop-types';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\nimport { isEmptyPrice } from '../utils';\n\n\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\n    const price = useMemo(() => {\n        const foodIds = new Set((item.foods || []).map(item => item.id));\n\n        const result = Object.values(order)\n            .filter((value) => {\n                const { item: { id }} = value;\n\n                return foodIds.has(id);\n            })\n            .reduce((result, value) => {\n                const { count, item: { price }} = value;\n\n                return result + parseInt(price) * parseInt(count);\n            }, 0);\n\n        return accounting.formatNumber(result, 0, ' ');\n    }, [ order, item ]);\n    const isEmptyP = isEmptyPrice(price)\n\n    return (\n        <div className=\"Place\">\n            <header className=\"Place__header\">\n                <aside className=\"Place__trz\">\n                    <h1 className=\"Place__head\">\n                        <Link to=\"/\" className=\"Place__logo\">\n                            {area.name}\n                        </Link>\n                    </h1>\n                    <Link to=\"/edit\" className=\"Place__change-tz\">\n                        <img\n                            alt=\"change-profile\"\n                            src={edit}\n                        />\n                    </Link>\n                </aside>\n            </header>\n            <aside className=\"Place__restoraunt\">\n                <img\n                    className=\"Place__restoraunt-logo\"\n                    alt=\"Fastfood logo\"\n                    src={item.image}\n                />\n                <h2\n                    className=\"Place__restoraunt-name\"\n                >\n                    {item.name}\n                </h2>\n                <p className=\"Place__restoraunt-type\">\n                    {item.description}\n                </p>\n            </aside>\n            <ul className=\"Place__foods\">\n                {item.foods.map((food => (\n                    <li\n                        className=\"Place__food\"\n                        key={food.id}\n                    >\n                        <div className=\"Place__food-logo-wrapper\">\n                            <img\n                                alt=\"food logo\"\n                                className=\"Place__food-logo\"\n                                src={food.image}\n                            />\n                        </div>\n                        <h3 className=\"Place__food-name\">\n                            {food.name}\n                        </h3>\n                        <p className=\"Place__food-composition\">\n                            {food.composition}\n                        </p>\n                        <div className=\"Place__food-price\">\n                            <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                                }}\n                            >\n                -\n                            </button>\n                            <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n                            <button\n                                className=\"Place__food-button\"\n                                onClick={() => {\n                                    onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                                }}\n                            >\n                +\n                            </button>\n                        </div>\n                    </li>\n                )))}\n            </ul>\n            <footer className=\"Place__footer\">\n                <Link\n                    to={`/basket/${area.id}/${item.id}`}\n                    className={classNames('Place__order', {'Place__order--empty': isEmptyP})}\n                    onClick={e => { isEmptyP && e.preventDefault() }}\n                >\n                    Оформить заказ ({price})\n                </Link>\n            </footer>\n        </div>\n    );\n};\n\nPlace.defaultProps = {\n    item: {},\n    onIncrementPosition: () => {},\n    onDecrementPosition: () => {},\n};\n\nexport default Place;\n","import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import React, { useMemo, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport accounting from 'accounting';\n\nimport Checkbox from './Checkbox';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\nimport { isEmptyPrice } from '../utils';\n\n\nconst Basket = ({ match: { params: { areaId, itemId }}, foodAreas, order }) => {\n  const [ faster, setFaster ] = useState(order.details?.faster || true);\n  const [ time, setTime ] = useState(order.details?.time || '');\n  const [ selfService, setSelfService ] = useState(order.details?.selfService || false);\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  const [ price, products ] = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const products = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      });\n\n    const result = products.reduce((result, value) => {\n        const { count, item } = value;\n\n        return result + parseInt(item.price) * parseInt(count);\n      }, 0);\n\n    return [ accounting.formatNumber(result, 0, ' '), products ];\n  }, [ order, item ]);\n\n  const isEmptyP = isEmptyPrice(price)\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__products-wrapper\">\n        <ul className=\"Place__products\">\n          {products.map(({ item, count }) => (\n            <li\n              className=\"Place__product\"\n              key={item.id}\n            >\n              <img\n                className=\"Place__product-logo\"\n                alt=\"Ordered product logo\"\n                src={item.image}\n              />\n              <h3\n                className=\"Place__product-name\"\n              >\n                {item.name}\n              </h3>\n              <p\n                className=\"Place__product-price\"\n              >\n                Цена: {item.price}\n              </p>\n              <p\n                className=\"Place__product-count\"\n              >\n                x{count}\n              </p>\n            </li>\n          ))}\n        </ul>\n        <Link\n          className=\"Place__change-product\"\n          to={`/place/${areaId}/${itemId}`}\n        >\n          Изменить\n        </Link>\n      </div>\n      <div className=\"Place__choice\">\n        <h3>Время:</h3>\n        <div className=\"Place__choice-item\">\n          <span>Как можно быстрее</span>\n          <Checkbox\n            checked={faster}\n            onToggle={() => {\n              if (faster) {\n                setFaster(false);\n              } else {\n                setTime('');\n                setFaster(true);\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <span>Назначить</span>\n          <input\n            type=\"time\"\n            value={time}\n            onFocus={() => {\n              setFaster(false);\n            }}\n            onChange={event => {\n              setFaster(false);\n              setTime(event.target.value);\n            }}\n            onBlur={() => {\n              if (time) {\n                setFaster(false);\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>С собой</h3>\n          <Checkbox checked={selfService} onToggle={() => setSelfService(!selfService)} />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>На месте</h3>\n          <Checkbox checked={!selfService} onToggle={() => setSelfService(!setSelfService)} />\n        </div>\n      </div>\n      <footer className=\"Place__footer\">\n        <Link\n          to={`/order/${area.id}/${item.id}`}\n          className=\"Place__order\"\n          onClick={e => { isEmptyP && e.preventDefault() }}\n        >\n          Оплатить {price}\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div \n          to=\"/orders\" \n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setActiveOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <button\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setFinishedOrder({ itemId: order.shopId });\n              }}\n            >\n              Отм.\n            </button>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n};\n\nexport default Orders;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\n\nconst FOOD_AREAS = [{\n\tid: 'pizikiva-gallery',\n\tname: 'ТРЦ \"Им.Пыжикова\"',\n\titems: [{\n\t\tid: 'kfc',\n\t\tname: 'KFC',\n\t\tlink: '/place/pizikiva-gallery/kfc',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: kfc,\n\t\tfoods: [{\n\t\t\tid: 'classic',\n\t\t\timage: FourTowar,\n\t\t\tname: 'Классик',\n\t\t\tprice: 150,\n\t\t}, {\n\t\t\tid: 'french-fries',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Картофель фри',\n\t\t\tprice: 50,\n\t\t}],\n\t}, {\n\t\tid: 'burger-king',\n\t\tname: 'Burger King',\n\t\tlink: '/place/pizikiva-gallery/burger-king',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: burger,\n\t\tfoods: [{\n\t\t\tid: 'OneTowar',\n\t\t\tname: 'Товар № 1',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 630,\n\t\t\timage: OneTowar,\n\t\t}, {\n\t\t\tid: 'TwoTowar',\n\t\t\tname: 'Товар № 2',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 450,\n\t\t\timage: TwoTowar,\n\t\t}, {\n\t\t\tid: 'ThreeTowar',\n\t\t\tname: 'Товар № 3',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 800,\n\t\t\timage: ThreeTowar,\n\t\t}, {\n\t\t\tid: 'FourthTowar',\n\t\t\tname: 'Товар № 4',\n\t\t\tcomposition: 'Состав по ГОСТу',\n\t\t\tprice: 600,\n\t\t\timage: FourTowar,\n\t\t}],\n\t}, {\n\t\tid: 'macdac',\n\t\tname: 'McDonal\\'s',\n\t\tlink: '/place/pizikiva-gallery/macdac',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: mcdac,\n\t\tfoods: [{\n\t\t\tid: 'hamburger',\n\t\t\timage: TwoTowar,\n\t\t\tname: 'Гамбургер',\n\t\t\tprice: 50,\n\t\t}, {\n\t\t\tid: 'bigmac',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Биг мак',\n\t\t\tprice: 200,\n\t\t}],\n\t}, {\n\t\tid: 'subway',\n\t\tname: 'SubWay',\n\t\tlink: '/place/pizikiva-gallery/subway',\n\t\timage: sub,\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\tfoods: [{\n\t\t\tid: 'melt-sub',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Сабвей мелт',\n\t\t\tprice: 300,\n\t\t}, {\n\t\t\tid: 'day-sub',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Саб дня',\n\t\t\tprice: 200,\n\t\t}],\n\t}],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\tresult[item.link] = item;\n\t});\n\n\treturn result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\titem.foods.forEach(food => {\n\t\t\tresult[food.id] = food;\n\t\t});\n\t});\n\n\treturn result;\n}, {});\n\nconst App = () => {\n\tconst [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n\tconst [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n\n\treturn (\n\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\n\t\t\t\t\t<Order\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/basket/:areaId/:itemId\" exact>\n\t\t\t\t\t<Basket\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/orders\"\n\t\t\t\t\texact\n\t\t\t\t>\n\t\t\t\t\t<Orders\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderStatuses={orderStatuses}\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/place/:area/:place\"\n\t\t\t\t\trender={routeProps => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Place\n\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\n\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\n                      count: 1,\n                      details: {\n                        faster: false,\n                        time: '',\n                        selfService: false\n                      }\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n                            debugger\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}